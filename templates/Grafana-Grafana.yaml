---
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  labels:
    app.kubernetes.io/component: graphing
    app.kubernetes.io/instance: k8s
    app.kubernetes.io/name: grafana
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/part-of: {{ $.Chart.Name }}
    app.kubernetes.io/version: {{ $.Chart.Version }}
  name: grafana
  namespace: "{{ .Values.nfc_monitoring.grafana.namespace }}"
spec:
  config:
    log:
      mode: "console"
    auth:
      disable_login_form: "false"
    security:
      admin_user: "{{ .Values.nfc_monitoring.grafana.admin_user }}"
      admin_password: "{{ .Values.nfc_monitoring.grafana.admin_password }}"
  deployment:
    metadata:
      labels:
        app.kubernetes.io/component: graphing
        app.kubernetes.io/instance: k8s
        app.kubernetes.io/name: grafana
        app.kubernetes.io/managed-by: {{ $.Release.Service }}
        app.kubernetes.io/part-of: {{ $.Chart.Name }}
        app.kubernetes.io/version: {{ $.Chart.Version }}
    spec:
      replicas: {{ .Values.nfc_monitoring.grafana.replicas | int }}
      selector:
        matchLabels:
          app.kubernetes.io/component: graphing
          app.kubernetes.io/instance: k8s
          app.kubernetes.io/name: grafana
          app.kubernetes.io/managed-by: {{ $.Release.Service }}
          app.kubernetes.io/part-of: {{ $.Chart.Name }}
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/component: graphing
            app.kubernetes.io/instance: k8s
            app.kubernetes.io/name: grafana
            app.kubernetes.io/managed-by: {{ $.Release.Service }}
            app.kubernetes.io/part-of: {{ $.Chart.Name }}
            app.kubernetes.io/version: {{ $.Chart.Version }}

        spec:
          containers:
          - name: grafana
            image: "{{ .Values.nfc_monitoring.grafana.image.name }}:{{ .Values.nfc_monitoring.grafana.image.tag }}"
            env:
              - name: GF_INSTALL_PLUGINS
                value: agenty-flowcharting-panel 0.9.1, ddurieux-glpi-app 1.3.1, grafana-oncall-app
              - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
                value: grafana-oncall-app 1.1.38
              - name: GF_ANALYTICS_REPORTING_ENABLED
                value: 'false'
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 3000
                name: grafana-http
            readinessProbe:
              failureThreshold: 3
            resources:
              limits:
                cpu: 2000m
                memory: 1Gi
              requests:
                cpu: 100m
                memory: 100Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
            volumeMounts:
              - mountPath: /var/lib/grafana
                name: grafana-storage
              - mountPath: /etc/grafana/provisioning/plugins
                name: plugin-config
                readOnly: false
          volumes:
            - name: grafana-storage
              emptyDir: {}
            - name: plugin-config
              configMap:
                # Provide the name of the ConfigMap you want to mount.
                name: grafana-config
                # An array of keys from the ConfigMap to create as files
                items:
                  - key: "oncall-app.yaml"
                    path: "oncall-app.yaml"
            # - volumeClaimTemplates:
            #   - metadata:
            #       name: data
            #       labels:
            #         app.kubernetes.io/name: loki
            #         app.kubernetes.io/component: logging
            #         app.kubernetes.io/part-of: {{ $.Chart.Name }}
            #         app.kubernetes.io/version: {{ $.Chart.Version }}
            #         app.kubernetes.io/managed-by: {{ $.Release.Service }}
            #     spec:
            #       accessModes:
            #         - "ReadWriteOnce"
            #       resources:
            #         requests:
            #           storage: "5Gi"
          serviceAccountName: grafana
          nodeSelector:
            kubernetes.io/os: linux
            
  # persistentVolumeClaim:
  #   metadata:
  #     labels:
  #       app.kubernetes.io/component: graphing
  #       app.kubernetes.io/instance: k8s
  #       app.kubernetes.io/name: grafana
  #       app.kubernetes.io/managed-by: {{ $.Release.Service }}
  #       app.kubernetes.io/part-of: {{ $.Chart.Name }}
  #       app.kubernetes.io/version: {{ $.Chart.Version }}
  #   spec:
  #     resources:
  #       requests:
  #         storage: "5Gi"